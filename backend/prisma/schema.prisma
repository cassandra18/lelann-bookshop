generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("customer")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id            String        @id @default(uuid())
  name          String        @unique
  description   String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  subcategories Subcategory[]
}

model Subcategory {
  id            String        @id @default(uuid())
  name          String        @unique
  parent_id     String?
  category_id   String
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  products      Product[]
  category      Category      @relation(fields: [category_id], references: [id])
  parent        Subcategory?  @relation("SubcategorySelfRelation", fields: [parent_id], references: [id])
  subcategories Subcategory[] @relation("SubcategorySelfRelation")
}

model Product {
  id             String      @id @default(uuid())
  name           String      @unique
  price          Float
  cta            String?     @default("Buy Now")
  condition      String      @default("NEW")
  subject        String?
  grade          String?     // e.g. "Grade 5", "Form 1"
  format         String?     // e.g. "Paperback", "Hardcover", "eBook"
  isbn           String?     @unique
  edition        String?     // e.g. "2nd Edition"
  language       String?     // e.g. "English", "Kiswahili"
  pages          Int?
  yearPublished  Int?
  stock          Int?        // Inventory count
  curriculum     String?     // e.g. "CBC", "8-4-4", "IGCSE"
  level          String?     // e.g. "Primary", "Secondary", "University"
  availability   Boolean?    @default(true) // In stock or not
  rating         Float?      // For user reviews (optional)
  
  author_id      String?
  publisher_id   String?
  subcategory_id String

  image          String
  description    String
  company        String

  featured       Boolean     @default(false)
  bestseller     Boolean     @default(false)
  newarrival     Boolean     @default(false)
  wishlist       Boolean     @default(false)
  promotion      Boolean     @default(false)

  oldPrice       Float?
  discount       Float?

  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt

  author         Author?     @relation(fields: [author_id], references: [id])
  publisher      Publisher?  @relation(fields: [publisher_id], references: [id])
  subcategory    Subcategory @relation(fields: [subcategory_id], references: [id])
}


model Author {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  books     Product[]
}

model Publisher {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  books     Product[]
}

enum Condition {
  NEW
  USED
  USED_GOOD
  USED_VERY_GOOD
  USED_ACCEPTABLE
}
